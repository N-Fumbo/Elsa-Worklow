import{r as s,h as t}from"./p-a7a3baa1.js";import{l as o}from"./p-e71312f9.js";import{R as n,l as i}from"./p-dd7ad463.js";import"./p-fcfa9e22.js";import{s as e}from"./p-1de51046.js";import"./p-72dc819a.js";import"./p-144a434e.js";import"./p-4031f4ff.js";const r=class{constructor(t){s(this,t),this.onChange=t=>{const e=t.target;this.inputContext.inputChanged(e.value,n.Literal)},this.onExpressionChanged=t=>{this.inputContext.inputChanged(t.detail.expression,t.detail.syntax)},this.inputContext=void 0}render(){var s,n,a;const p=this.inputContext,r=p.inputDescriptor,l=r.name,d=r.name,u=r.displayName,c=r.description,m=e.variableDescriptors,h=o.groupBy(m,(t=>t.category)),v=i(p),x=null!==(n=null===(s=null==v?void 0:v.expression)||void 0===s?void 0:s.type)&&void 0!==n?n:r.defaultSyntax,f=null===(a=null==v?void 0:v.expression)||void 0===a?void 0:a.value;let g=f;if(null==g){const t=r.defaultValue;g=t?t.toString():void 0}return t("elsa-input-control-switch",{label:u,hint:c,syntax:x,expression:f,onExpressionChanged:this.onExpressionChanged},t("select",{id:d,name:l,onChange:t=>this.onChange(t)},t("option",{value:"",selected:!g||""==g}),Object.keys(h).map((e=>{const s=h[e];return t("optgroup",{label:e},s.map((e=>t("option",{value:e.typeName,selected:e.typeName==g},e.displayName))))}))))}};export{r as elsa_type_picker_input};