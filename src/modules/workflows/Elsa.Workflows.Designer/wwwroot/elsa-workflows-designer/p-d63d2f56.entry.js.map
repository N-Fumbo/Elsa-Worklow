{"version":3,"names":["inputTagsCss","InputTags","this","addItem","async","item","values","uniq","valueChanged","emit","e","key","preventDefault","input","target","value","trim","length","tag","filter","x","render","Array","isArray","h","class","map","href","onClick","onDeleteTagClick","type","id","fieldId","onKeyDown","onInputKeyDown","onBlur","onInputBlur","placeholder","placeHolder"],"sources":["./src/components/shared/input-tags/input-tags.css?tag=elsa-input-tags","./src/components/shared/input-tags/input-tags.tsx"],"sourcesContent":[".tag-input {\n  outline: none !important;\n  box-shadow: none !important;\n  max-width: max-content !important;\n  display: inline-block !important;\n}\n","import {Component, h, Prop, Event, EventEmitter, State, Watch} from '@stencil/core';\nimport {uniq} from 'lodash';\n\n@Component({\n  tag: 'elsa-input-tags',\n  styleUrl: 'input-tags.css',\n  shadow: false,\n})\nexport class InputTags {\n\n  @Prop() fieldId?: string;\n  @Prop() placeHolder?: string = 'Add tag';\n  @Prop({mutable: true}) values?: Array<string> = [];\n  @Event({bubbles: true}) valueChanged: EventEmitter<Array<string>>;\n\n  private addItem = async (item: string) => {\n    const values = uniq([...this.values || [], item]);\n    this.values = values;\n    await this.valueChanged.emit(values);\n  };\n\n  private async onInputKeyDown(e: KeyboardEvent) {\n    if (e.key != \"Enter\")\n      return;\n\n    e.preventDefault();\n\n    const input = e.target as HTMLInputElement;\n    const value = input.value.trim();\n\n    if (value.length == 0)\n      return;\n\n    await this.addItem(value);\n    input.value = '';\n  }\n\n  async onInputBlur(e: Event) {\n    const input = e.target as HTMLInputElement;\n    const value = input.value.trim();\n\n    if (value.length == 0)\n      return;\n\n    await this.addItem(value);\n    input.value = '';\n  }\n\n  async onDeleteTagClick(e: Event, tag: string) {\n    e.preventDefault();\n\n    this.values = this.values.filter(x => x !== tag);\n    await this.valueChanged.emit(this.values);\n  }\n\n  render() {\n    let values = this.values || [];\n\n    if (!Array.isArray(values))\n      values = [];\n\n    return (\n      <div class=\"tw-py-2 tw-px-3 tw-bg-white tw-shadow-sm tw-border tw-border-gray-300 tw-rounded-md\">\n        {values.map(value => (\n          <a href=\"#\" onClick={e => this.onDeleteTagClick(e, value)} class=\"tw-inline-block tw-text-xs tw-bg-blue-400 tw-text-white tw-py-2 tw-px-3 tw-mr-1 tw-mb-1 tw-rounded\">\n            <span>{value}</span>\n            <span class=\"tw-text-white hover:tw-text-white tw-ml-1\">&times;</span>\n          </a>\n        ))}\n        <input type=\"text\" id={this.fieldId}\n               onKeyDown={e => this.onInputKeyDown(e)}\n               onBlur={e => this.onInputBlur(e)}\n               class=\"tag-input tw-inline-block tw-text-sm tw-outline-none focus:tw-outline-none tw-border-none tw-shadow-none focus:tw-border-none focus:tw-border-transparent focus:tw-shadow-none\"\n               placeholder={this.placeHolder}/>\n      </div>\n    )\n  }\n}\n"],"mappings":"8GAAA,MAAMA,EAAe,wK,MCQRC,EAAS,M,oEAOZC,KAAAC,QAAUC,MAAOC,IACvB,MAAMC,EAASC,OAAK,IAAIL,KAAKI,QAAU,GAAID,IAC3CH,KAAKI,OAASA,QACRJ,KAAKM,aAAaC,KAAKH,EAAO,E,wCAPP,U,YACiB,E,CASxCF,qBAAqBM,GAC3B,GAAIA,EAAEC,KAAO,QACX,OAEFD,EAAEE,iBAEF,MAAMC,EAAQH,EAAEI,OAChB,MAAMC,EAAQF,EAAME,MAAMC,OAE1B,GAAID,EAAME,QAAU,EAClB,aAEIf,KAAKC,QAAQY,GACnBF,EAAME,MAAQ,E,CAGhBX,kBAAkBM,GAChB,MAAMG,EAAQH,EAAEI,OAChB,MAAMC,EAAQF,EAAME,MAAMC,OAE1B,GAAID,EAAME,QAAU,EAClB,aAEIf,KAAKC,QAAQY,GACnBF,EAAME,MAAQ,E,CAGhBX,uBAAuBM,EAAUQ,GAC/BR,EAAEE,iBAEFV,KAAKI,OAASJ,KAAKI,OAAOa,QAAOC,GAAKA,IAAMF,UACtChB,KAAKM,aAAaC,KAAKP,KAAKI,O,CAGpCe,SACE,IAAIf,EAASJ,KAAKI,QAAU,GAE5B,IAAKgB,MAAMC,QAAQjB,GACjBA,EAAS,GAEX,OACEkB,EAAA,OAAKC,MAAM,uFACRnB,EAAOoB,KAAIX,GACVS,EAAA,KAAGG,KAAK,IAAIC,QAASlB,GAAKR,KAAK2B,iBAAiBnB,EAAGK,GAAQU,MAAM,sGAC/DD,EAAA,YAAOT,GACPS,EAAA,QAAMC,MAAM,6CAA2C,QAG3DD,EAAA,SAAOM,KAAK,OAAOC,GAAI7B,KAAK8B,QACrBC,UAAWvB,GAAKR,KAAKgC,eAAexB,GACpCyB,OAAQzB,GAAKR,KAAKkC,YAAY1B,GAC9Be,MAAM,iLACNY,YAAanC,KAAKoC,c"}