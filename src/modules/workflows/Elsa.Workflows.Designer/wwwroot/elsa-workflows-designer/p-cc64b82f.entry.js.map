{"version":3,"names":["TypePickerInput","this","onChange","e","inputElement","target","inputContext","inputChanged","value","SyntaxNames","Literal","onExpressionChanged","detail","expression","syntax","render","inputDescriptor","fieldName","name","fieldId","displayName","description","availableTypes","descriptorsStore","variableDescriptors","groupedVariableTypes","groupBy","x","category","input","getInputPropertyValue","_b","_a","type","defaultSyntax","_c","currentValue","undefined","defaultValue","toString","h","label","hint","id","selected","Object","keys","map","variableTypes","descriptor","typeName"],"sources":["./src/components/inputs/type-picker.tsx"],"sourcesContent":["import {Component, Prop, h} from '@stencil/core';\nimport {groupBy} from 'lodash';\nimport {LiteralExpression, SyntaxNames} from \"../../models\";\nimport {ActivityInputContext} from \"../../services/activity-input-driver\";\nimport {getInputPropertyValue} from \"../../utils\";\nimport descriptorsStore from '../../data/descriptors-store';\nimport {VariableDescriptor} from \"../../services/api-client/variable-descriptors-api\";\nimport {ExpressionChangedArs} from \"../shared/input-control-switch/input-control-switch\";\n\n@Component({\n  tag: 'elsa-type-picker-input',\n  shadow: false\n})\nexport class TypePickerInput {\n  @Prop() public inputContext: ActivityInputContext;\n\n  public render() {\n    const inputContext = this.inputContext;\n    const inputDescriptor = inputContext.inputDescriptor;\n    const fieldName = inputDescriptor.name;\n    const fieldId = inputDescriptor.name;\n    const displayName = inputDescriptor.displayName;\n    const description = inputDescriptor.description;\n    const availableTypes: Array<VariableDescriptor> = descriptorsStore.variableDescriptors;\n    const groupedVariableTypes = groupBy(availableTypes, x => x.category);\n    const input = getInputPropertyValue(inputContext);\n    const syntax = input?.expression?.type ?? inputDescriptor.defaultSyntax;\n    const value = (input?.expression as LiteralExpression)?.value;\n    let currentValue = value;\n\n    if (currentValue == undefined) {\n      const defaultValue = inputDescriptor.defaultValue;\n      currentValue = defaultValue ? defaultValue.toString() : undefined;\n    }\n\n    return (\n      <elsa-input-control-switch label={displayName} hint={description} syntax={syntax} expression={value} onExpressionChanged={this.onExpressionChanged}>\n        <select id={fieldId} name={fieldName} onChange={e => this.onChange(e)}>\n          <option value=\"\" selected={(!currentValue || currentValue == \"\")}></option>\n          {Object.keys(groupedVariableTypes).map(category => {\n            const variableTypes = groupedVariableTypes[category] as Array<VariableDescriptor>;\n            return (<optgroup label={category}>\n              {variableTypes.map(descriptor => <option value={descriptor.typeName} selected={descriptor.typeName == currentValue}>{descriptor.displayName}</option>)}\n            </optgroup>);\n          })}\n        </select>\n      </elsa-input-control-switch>\n    );\n  }\n\n  private onChange = (e: Event) => {\n    const inputElement = e.target as HTMLSelectElement;\n    this.inputContext.inputChanged(inputElement.value, SyntaxNames.Literal);\n  }\n\n  private onExpressionChanged = (e: CustomEvent<ExpressionChangedArs>) => {\n    this.inputContext.inputChanged(e.detail.expression, e.detail.syntax);\n  }\n}\n"],"mappings":"oQAaaA,EAAe,M,yBAqClBC,KAAAC,SAAYC,IAClB,MAAMC,EAAeD,EAAEE,OACvBJ,KAAKK,aAAaC,aAAaH,EAAaI,MAAOC,EAAYC,QAAQ,EAGjET,KAAAU,oBAAuBR,IAC7BF,KAAKK,aAAaC,aAAaJ,EAAES,OAAOC,WAAYV,EAAES,OAAOE,OAAO,E,4BAxC/DC,S,UACL,MAAMT,EAAeL,KAAKK,aAC1B,MAAMU,EAAkBV,EAAaU,gBACrC,MAAMC,EAAYD,EAAgBE,KAClC,MAAMC,EAAUH,EAAgBE,KAChC,MAAME,EAAcJ,EAAgBI,YACpC,MAAMC,EAAcL,EAAgBK,YACpC,MAAMC,EAA4CC,EAAiBC,oBACnE,MAAMC,EAAuBC,UAAQJ,GAAgBK,GAAKA,EAAEC,WAC5D,MAAMC,EAAQC,EAAsBxB,GACpC,MAAMQ,GAASiB,GAAAC,EAAAH,IAAK,MAALA,SAAK,SAALA,EAAOhB,cAAU,MAAAmB,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,EAAAA,EAAIf,EAAgBkB,cAC1D,MAAM1B,GAAQ2B,EAACN,IAAK,MAALA,SAAK,SAALA,EAAOhB,cAAgC,MAAAsB,SAAA,SAAAA,EAAE3B,MACxD,IAAI4B,EAAe5B,EAEnB,GAAI4B,GAAgBC,UAAW,CAC7B,MAAMC,EAAetB,EAAgBsB,aACrCF,EAAeE,EAAeA,EAAaC,WAAaF,S,CAG1D,OACEG,EAAA,6BAA2BC,MAAOrB,EAAasB,KAAMrB,EAAaP,OAAQA,EAAQD,WAAYL,EAAOG,oBAAqBV,KAAKU,qBAC7H6B,EAAA,UAAQG,GAAIxB,EAASD,KAAMD,EAAWf,SAAUC,GAAKF,KAAKC,SAASC,IACjEqC,EAAA,UAAQhC,MAAM,GAAGoC,UAAYR,GAAgBA,GAAgB,KAC5DS,OAAOC,KAAKrB,GAAsBsB,KAAInB,IACrC,MAAMoB,EAAgBvB,EAAqBG,GAC3C,OAAQY,EAAA,YAAUC,MAAOb,GACtBoB,EAAcD,KAAIE,GAAcT,EAAA,UAAQhC,MAAOyC,EAAWC,SAAUN,SAAUK,EAAWC,UAAYd,GAAea,EAAW7B,eACvH,K"}