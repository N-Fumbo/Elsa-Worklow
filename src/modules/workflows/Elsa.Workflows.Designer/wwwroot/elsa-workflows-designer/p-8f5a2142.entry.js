import{r as o,h as t}from"./p-a7a3baa1.js";import{R as i,n as s}from"./p-dd7ad463.js";import"./p-fcfa9e22.js";import"./p-1de51046.js";import{F as n}from"./p-93025d0a.js";import{W as e}from"./p-4ad27727.js";import"./p-144a434e.js";import"./p-72dc819a.js";import"./p-e71312f9.js";import"./p-4031f4ff.js";import"./p-ec4413cd.js";import"./p-37e9f5c1.js";const r=class{constructor(t){o(this,t),this.onChange=t=>{const o=t.target.value,n=this.workflowDefinition.variables.find((i=>i.id==o));this.inputContext.inputChanged(n,i.Literal)},this.inputContext=void 0,this.workflowDefinition=void 0}render(){const i=this.inputContext,o=i.inputDescriptor,r=o.name,a=o.name,l=o.displayName,p=o.description;let d=s(i);if(null==d){const i=o.defaultValue;d=i?i.toString():void 0}return t(e.Consumer,null,(({workflowDefinition:i})=>{var o;let e=null!==(o=null==i?void 0:i.variables)&&void 0!==o?o:[];return e=[null,...e],t(n,{fieldId:a,label:l,hint:p},t("select",{id:a,name:r,onChange:i=>this.onChange(i)},e.map((i=>{const o=null==i?void 0:i.name,n=null==i?void 0:i.id,e=n==(null==d?void 0:d.id);return t("option",{value:n,selected:e},o)}))))}))}};e.injectProps(r,["workflowDefinition"]);export{r as elsa_variable_picker_input};