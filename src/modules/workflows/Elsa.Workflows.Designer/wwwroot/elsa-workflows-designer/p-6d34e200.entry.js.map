{"version":3,"names":["WorkflowIcon","h","class","fill","viewBox","stroke","d","x","y","width","height","rx","WorkflowStatusIcon","cx","cy","r","points","Search","onSearch","onSubmit","e","preventDefault","form","target","formData","FormData","searchTerm","get","toString","onSearchDebounced","debounce","onKeyUp","term","value","htmlFor","name","placeholder","type","Filter","pageSizeFilter","workflowFilter","statusFilter","subStatusFilter","orderByFilter","resetFilter","onBulkDelete","onBulkCancel","BulkActions","onClick","PageSizeFilter","Object","assign","WorkflowFilter","StatusFilter","SubStatusFilter","OrderByFilter","bulkActions","text","onBulkActionSelected","action","detail","handler","items","icon","BulkActionsIcon","origin","DropdownButtonOrigin","TopLeft","theme","onItemSelected","selectedPageSize","onChange","selectedPageSizeText","pageSizes","map","isSelected","onPageSizeChanged","parseInt","PageSizeIcon","TopRight","workflows","selectedWorkflowDefinitionId","selectedWorkflow","find","definitionId","getWorkflowName","workflow","_a","length","selectedWorkflowText","allItem","onWorkflowChanged","selectedStatus","selectedStatusText","statuses","WorkflowStatus","Running","Finished","statusOptions","onStatusChanged","selectedSubStatusText","subStatuses","WorkflowSubStatus","Executing","Suspended","Faulted","Cancelled","subStatusOptions","selectedOrderBy","selectedOrderByText","orderByValues","OrderBy","Updated","Created","onOrderByChanged","OrderByIcon","key","getRequest","json","localStorage","getItem","JSON","parse","persistRequest","request","setItem","stringify","statusColorMap","subStatusColorMap","Compensating","getSubStatusColor","status","updateSelectedWorkflowInstances","isChecked","workflowInstances","selectedWorkflowInstanceIds","currentItems","id","concat","filter","item","includes","WorkflowInstanceBrowser","constructor","hostRef","this","publishedOrLatestWorkflows","onDeleteManyClick","async","modalDialogService","show","DefaultContents","Warning","actions","DefaultModalActions","Delete","workflowInstancesApi","deleteMany","workflowInstanceIds","loadWorkflowInstances","Cancel","modalType","ModalType","Confirmation","onCancelManyClick","Yes","cancelMany","resetPagination","currentPage","loadWorkflowDefinitions","versionOptions","allVersions","workflowDefinitionsApi","list","selectLatestWorkflows","getSelectAllState","findIndex","setSelectAllIndeterminateState","selectAllCheckbox","selectedItems","indeterminate","groups","_","groupBy","first","orderBy","pageSize","currentPageSize","onWorkflowStatusChanged","onWorkflowSubStatusChanged","selectedSubStatus","onWorkflowInstanceClick","workflowInstance","workflowInstanceSelected","emit","onPaginated","page","totalCount","DEFAULT_PAGE_SIZE","Container","WorkflowInstancesApi","WorkflowDefinitionsApi","ModalDialogService","persistedRequest","subStatus","workflowDefinition","render","filterProps","undefined","Host","checked","onSelectAllCheckChange","ref","el","statusColor","workflowName","onWorkflowInstanceCheckChange","href","correlationId","version","formatTimestamp","createdAt","finishedAt","menuItems","EditIcon","onDeleteClick","DeleteIcon","orderDirection","OrderDirection","Descending","delete","checkBox","selectAllChecked","MIN_PAGE_SIZE","MAX_PAGE_SIZE","START_PAGE"],"sources":["./src/components/icons/tooling/workflow.tsx","./src/components/icons/tooling/workflow-status-icon.tsx","./src/modules/workflow-instances/components/search.tsx","./src/modules/workflow-instances/components/filter.tsx","./src/modules/workflow-instances/services/lookup-persistence.ts","./src/modules/workflow-instances/services/utils.ts","./src/modules/workflow-instances/components/browser.tsx"],"sourcesContent":["import {FunctionalComponent, h} from \"@stencil/core\";\n\nexport const WorkflowIcon: FunctionalComponent = () =>\n  <svg class=\"tw-mr-3 tw-h-5 tw-w-5 tw-text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n    <rect x=\"4\" y=\"4\" width=\"6\" height=\"6\" rx=\"1\"/>\n    <rect x=\"14\" y=\"4\" width=\"6\" height=\"6\" rx=\"1\"/>\n    <rect x=\"4\" y=\"14\" width=\"6\" height=\"6\" rx=\"1\"/>\n    <rect x=\"14\" y=\"14\" width=\"6\" height=\"6\" rx=\"1\"/>\n  </svg>;\n","import {FunctionalComponent, h} from \"@stencil/core\";\n\nexport const WorkflowStatusIcon: FunctionalComponent = () =>\n  <svg class=\"tw-mr-3 tw-h-5 tw-w-5 tw-text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n    <polygon points=\"10 8 16 12 10 16 10 8\"/>\n  </svg>;\n","import {FunctionalComponent, h} from \"@stencil/core\";\nimport {debounce} from 'lodash';\n\nexport interface SearchProps {\n  onSearch: (term: string) => void;\n}\n\nexport const Search: FunctionalComponent<SearchProps> = ({onSearch}) => {\n\n  const onSubmit = (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const formData = new FormData(form);\n    const searchTerm: FormDataEntryValue = formData.get('searchTerm').toString();\n\n    onSearch(searchTerm);\n  }\n\n  const onSearchDebounced = debounce(onSearch, 200);\n\n  const onKeyUp = (e: KeyboardEvent) => {\n    const term = (e.target as HTMLInputElement).value;\n    onSearchDebounced(term);\n  };\n\n  return <div class=\"tw-relative tw-z-10 tw-flex-shrink-0 tw-flex tw-h-16 tw-bg-white tw-border-b tw-border-gray-200\">\n    <div class=\"tw-flex-1 tw-px-4 tw-flex tw-justify-between sm:tw-px-6 lg:tw-px-8\">\n      <div class=\"tw-flex-1 tw-flex\">\n        <form class=\"tw-w-full tw-flex md:tw-ml-0\" onSubmit={onSubmit}>\n          <label htmlFor=\"search_field\" class=\"tw-sr-only\">Search</label>\n          <div class=\"tw-relative tw-w-full tw-text-gray-400 focus-within:tw-text-gray-600\">\n            <div\n              class=\"tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pointer-events-none\">\n              <svg class=\"tw-h-5 tw-w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"/>\n              </svg>\n            </div>\n            <input name=\"searchTerm\"\n                   onKeyUp={onKeyUp}\n                   class=\"tw-block tw-w-full tw-h-full tw-pl-8 tw-pr-3 tw-py-2 tw-rounded-md tw-text-gray-900 tw-placeholder-cool-gray-500 focus:tw-placeholder-cool-gray-400 sm:tw-text-sm tw-border-0 focus:tw-outline-none focus:tw-ring-0\"\n                   placeholder=\"Search\"\n                   type=\"search\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>;\n}\n","import {FunctionalComponent, h} from \"@stencil/core\";\nimport {WorkflowDefinitionSummary} from \"../../workflow-definitions/models/entities\";\nimport {OrderBy, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\nimport {DropdownButtonItem, DropdownButtonOrigin} from \"../../../components/shared/dropdown-button/models\";\nimport {BulkActionsIcon, OrderByIcon, PageSizeIcon, WorkflowIcon, WorkflowStatusIcon} from \"../../../components/icons/tooling\";\n\nexport interface FilterProps extends BulkActionsProps {\n  pageSizeFilter: PageSizeFilterProps;\n  workflowFilter: WorkflowFilterProps;\n  statusFilter: StatusFilterProps;\n  subStatusFilter: SubStatusFilterProps;\n  orderByFilter: OrderByFilterProps;\n  resetFilter: () => void;\n}\n\nexport interface BulkActionsProps {\n  onBulkDelete: () => void;\n  onBulkCancel: () => void;\n}\n\nexport interface PageSizeFilterProps {\n  selectedPageSize: number;\n  onChange: (pageSize: number) => void;\n}\n\nexport interface WorkflowFilterProps {\n  workflows: Array<WorkflowDefinitionSummary>;\n  selectedWorkflowDefinitionId?: string;\n  onChange: (definitionId: string) => void;\n}\n\nexport interface StatusFilterProps {\n  selectedStatus?: WorkflowStatus;\n  onChange: (status: WorkflowStatus) => void;\n}\n\nexport interface SubStatusFilterProps {\n  selectedStatus?: WorkflowSubStatus;\n  onChange: (status: WorkflowSubStatus) => void;\n}\n\nexport interface OrderByFilterProps {\n  selectedOrderBy?: OrderBy;\n  onChange: (orderBy: OrderBy) => void;\n}\n\nexport const Filter: FunctionalComponent<FilterProps> = ({pageSizeFilter, workflowFilter, statusFilter, subStatusFilter, orderByFilter, resetFilter, onBulkDelete, onBulkCancel}) => {\n\n  return <div class=\"tw-p-8 tw-flex tw-content-end tw-justify-right tw-bg-white tw-space-x-4\">\n    <div class=\"tw-flex-shrink-0\">\n      <BulkActions onBulkDelete={onBulkDelete} onBulkCancel={onBulkCancel} />\n    </div>\n    <div class=\"tw-flex-1\">\n      &nbsp;\n    </div>\n\n    <button onClick={resetFilter} type=\"button\" class=\"tw-text-sm tw-text-blue-600 active:tw-text-blue-700 tw-px-3 active:ring tw-ring-blue-500 tw-rounded\">\n      Reset\n    </button>\n\n    <PageSizeFilter {...pageSizeFilter}/>\n    <WorkflowFilter {...workflowFilter}/>\n    <StatusFilter {...statusFilter}/>\n    <SubStatusFilter {...subStatusFilter}/>\n    <OrderByFilter {...orderByFilter} />\n  </div>;\n}\n\nconst BulkActions: FunctionalComponent<BulkActionsProps> = ({ onBulkDelete, onBulkCancel }) => {\n  const bulkActions = [{\n    text: 'Delete',\n    name: 'Delete',\n  }, {\n    text: 'Cancel',\n    name: 'Cancel',\n  }];\n\n  const onBulkActionSelected = (e: CustomEvent<DropdownButtonItem>) => {\n    const action = e.detail;\n    switch (action.name) {\n      case 'Delete':\n        onBulkDelete();\n        break;\n      case 'Cancel':\n        onBulkCancel();\n        break;\n\n      default:\n        action.handler();\n    }\n  };\n\n  return <elsa-dropdown-button\n    text=\"Bulk Actions\" items={bulkActions} icon={<BulkActionsIcon/>}\n    origin={DropdownButtonOrigin.TopLeft}\n    theme=\"Secondary\"\n    onItemSelected={onBulkActionSelected}/>\n}\n\nconst PageSizeFilter: FunctionalComponent<PageSizeFilterProps> = ({selectedPageSize, onChange}) => {\n  const selectedPageSizeText = `Page size: ${selectedPageSize}`;\n  const pageSizes: Array<number> = [5, 10, 15, 20, 30, 50, 100];\n\n  const items: Array<DropdownButtonItem> = pageSizes.map(x => {\n    const text = \"\" + x;\n    return {text: text, isSelected: x == selectedPageSize, value: x};\n  });\n\n  const onPageSizeChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(parseInt(e.detail.value));\n\n  return <elsa-dropdown-button\n    text={selectedPageSizeText} items={items} icon={<PageSizeIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onPageSizeChanged}/>\n}\n\nconst WorkflowFilter: FunctionalComponent<WorkflowFilterProps> = ({workflows, selectedWorkflowDefinitionId, onChange}) => {\n  const selectedWorkflow = workflows.find(x => x.definitionId == selectedWorkflowDefinitionId);\n  const getWorkflowName = (workflow?: WorkflowDefinitionSummary) => workflow?.name?.length > 0 ? workflow.name : 'Untitled';\n  const selectedWorkflowText = !selectedWorkflowDefinitionId ? 'All workflows' : getWorkflowName(selectedWorkflow);\n  let items: Array<DropdownButtonItem> = workflows.map(x => ({text: getWorkflowName(x), value: x.definitionId, isSelected: x.definitionId == selectedWorkflowDefinitionId}));\n  const allItem: DropdownButtonItem = {text: 'All', value: null, isSelected: !selectedWorkflowDefinitionId};\n  const onWorkflowChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  items = [allItem, ...items];\n\n  return <elsa-dropdown-button\n    text={selectedWorkflowText} items={items} icon={<WorkflowIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onWorkflowChanged}/>\n}\n\nconst StatusFilter: FunctionalComponent<StatusFilterProps> = ({selectedStatus, onChange}) => {\n  const selectedStatusText = !!selectedStatus ? selectedStatus : 'Status';\n  const statuses: Array<WorkflowStatus> = [null, WorkflowStatus.Running, WorkflowStatus.Finished];\n  const statusOptions: Array<DropdownButtonItem> = statuses.map(x => ({text: x ?? 'All', isSelected: x == selectedStatus, value: x}));\n  const onStatusChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedStatusText} items={statusOptions} icon={<WorkflowStatusIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onStatusChanged}/>\n}\n\nconst SubStatusFilter: FunctionalComponent<SubStatusFilterProps> = ({selectedStatus, onChange}) => {\n  const selectedSubStatusText = !!selectedStatus ? selectedStatus : 'Sub status';\n  const subStatuses: Array<WorkflowSubStatus> = [null, WorkflowSubStatus.Executing, WorkflowSubStatus.Suspended, WorkflowSubStatus.Finished, WorkflowSubStatus.Faulted, WorkflowSubStatus.Cancelled];\n  const subStatusOptions: Array<DropdownButtonItem> = subStatuses.map(x => ({text: x ?? 'All', isSelected: x == selectedStatus, value: x}));\n  const onStatusChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedSubStatusText} items={subStatusOptions} icon={<WorkflowStatusIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onStatusChanged}/>\n}\n\nconst OrderByFilter: FunctionalComponent<OrderByFilterProps> = ({selectedOrderBy, onChange}) => {\n  const selectedOrderByText = !!selectedOrderBy ? `Ordered by: ${selectedOrderBy}` : 'Order by';\n  const orderByValues: Array<OrderBy> = [OrderBy.Finished, OrderBy.Updated, OrderBy.Created];\n  const items: Array<DropdownButtonItem> = orderByValues.map(x => ({text: x, value: x, isSelected: x == selectedOrderBy}));\n  const onOrderByChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedOrderByText} items={items} icon={<OrderByIcon/>}\n    theme=\"Secondary\"\n    origin={DropdownButtonOrigin.TopRight}\n    onItemSelected={onOrderByChanged}/>\n}\n","import { ListWorkflowInstancesRequest, WorkflowInstancesApi } from './workflow-instances-api';\n\nconst key = 'LS/wfInstanceBrowser';\n\nexport function getRequest(): ListWorkflowInstancesRequest | undefined {\n  var json = localStorage.getItem(key);\n\n  if (!json) return;\n\n  return JSON.parse(json);\n}\nexport function persistRequest(request: ListWorkflowInstancesRequest) {\n  localStorage.setItem(key, JSON.stringify(request));\n}\n","import {PagedList, WorkflowInstanceSummary, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\n\nconst statusColorMap = {};\nconst subStatusColorMap = {};\n\nstatusColorMap[WorkflowStatus.Running] = 'bg-rose-600';\nstatusColorMap[WorkflowStatus.Finished] = 'tw-bg-green-600';\n\nsubStatusColorMap[WorkflowSubStatus.Executing] = 'bg-rose-600';\nsubStatusColorMap[WorkflowSubStatus.Suspended] = 'tw-bg-blue-600';\nsubStatusColorMap[WorkflowSubStatus.Finished] = 'tw-bg-green-600';\nsubStatusColorMap[WorkflowSubStatus.Faulted] = 'tw-bg-red-600';\nsubStatusColorMap[WorkflowSubStatus.Compensating] = 'bg-orange-600';\nsubStatusColorMap[WorkflowSubStatus.Cancelled] = 'bg-gray-900';\n\nexport function getStatusColor(status: WorkflowStatus) {\n  return statusColorMap[status] ?? statusColorMap[WorkflowStatus.Running];\n}\n\nexport function getSubStatusColor(status: WorkflowSubStatus) {\n  return subStatusColorMap[status] ?? statusColorMap[WorkflowSubStatus.Suspended];\n}\n\nexport function updateSelectedWorkflowInstances(isChecked: boolean, workflowInstances: PagedList<WorkflowInstanceSummary>, selectedWorkflowInstanceIds: Array<string>) {\n  const currentItems = workflowInstances.items.map(x => x.id);\n\n  return isChecked\n    ? selectedWorkflowInstanceIds.concat(currentItems.filter(item => !selectedWorkflowInstanceIds.includes(item)))\n    : selectedWorkflowInstanceIds.filter(item => !currentItems.includes(item));\n\n}\n","import {Component, Event, EventEmitter, h, Host, Method, Prop, State} from '@stencil/core';\nimport _ from 'lodash';\nimport {Search} from \"./search\";\nimport {Filter, FilterProps} from \"./filter\";\nimport {ListWorkflowInstancesRequest, WorkflowInstancesApi} from \"../services/workflow-instances-api\";\nimport {getRequest, persistRequest} from '../services/lookup-persistence';\nimport {WorkflowDefinition, WorkflowDefinitionSummary} from \"../../workflow-definitions/models/entities\";\nimport {OrderBy, OrderDirection, PagedList, VersionOptions, WorkflowInstanceSummary, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\nimport {Container} from \"typedi\";\nimport {WorkflowDefinitionsApi} from \"../../workflow-definitions\";\nimport {getSubStatusColor, updateSelectedWorkflowInstances} from \"../services/utils\";\nimport {formatTimestamp} from \"../../../utils\";\nimport {DeleteIcon, EditIcon} from \"../../../components/icons/tooling\";\nimport {PagerData} from \"../../../components/shared/pager/pager\";\nimport {DefaultContents, DefaultModalActions, ModalDialogService, ModalType} from '../../../components/shared/modal-dialog';\n\n@Component({\n  tag: 'elsa-workflow-instance-browser',\n  shadow: false,\n})\nexport class WorkflowInstanceBrowser {\n  static readonly DEFAULT_PAGE_SIZE = 15;\n  static readonly MIN_PAGE_SIZE = 5;\n  static readonly MAX_PAGE_SIZE = 100;\n  static readonly START_PAGE = 0;\n\n  private readonly workflowInstancesApi: WorkflowInstancesApi;\n  private readonly workflowDefinitionsApi: WorkflowDefinitionsApi;\n  private readonly modalDialogService: ModalDialogService;\n\n  private selectAllCheckbox: HTMLInputElement;\n  private publishedOrLatestWorkflows: Array<WorkflowDefinitionSummary> = [];\n\n\n  constructor() {\n    this.workflowInstancesApi = Container.get(WorkflowInstancesApi);\n    this.workflowDefinitionsApi = Container.get(WorkflowDefinitionsApi);\n    this.modalDialogService = Container.get(ModalDialogService);\n  }\n\n  @Prop() workflowDefinition: WorkflowDefinition;\n  @Event() public workflowInstanceSelected: EventEmitter<WorkflowInstanceSummary>;\n  @State() private workflowInstances: PagedList<WorkflowInstanceSummary> = {items: [], totalCount: 0};\n  @State() private workflows: Array<WorkflowDefinitionSummary> = [];\n  @State() private selectAllChecked: boolean;\n  @State() private selectedWorkflowInstanceIds: Array<string> = [];\n  @State() private searchTerm?: string;\n  @State() private currentPage: number = 0;\n  @State() private currentPageSize: number = WorkflowInstanceBrowser.DEFAULT_PAGE_SIZE;\n  @State() private selectedWorkflowDefinitionId?: string;\n  @State() private selectedStatus?: WorkflowStatus;\n  @State() private selectedSubStatus?: WorkflowSubStatus;\n  @State() private orderBy?: OrderBy;\n\n  async componentWillLoad() {\n    var persistedRequest = getRequest()\n\n    if (persistedRequest) {\n      // TODO: Persist search term, need to bind the value to the input\n      //this.searchTerm = persistedRequest.searchTerm\n      this.currentPage = persistedRequest.page\n      this.currentPageSize = persistedRequest.pageSize\n      this.orderBy = persistedRequest.orderBy\n      this.selectedWorkflowDefinitionId = persistedRequest.definitionId\n      this.selectedStatus = persistedRequest.status\n      this.selectedSubStatus = persistedRequest.subStatus\n    }\n\n    if(this.workflowDefinition != null)\n      this.selectedWorkflowDefinitionId = this.workflowDefinition.definitionId;\n\n    await this.loadWorkflowDefinitions();\n    await this.loadWorkflowInstances();\n  }\n\n  public render() {\n    const publishedOrLatestWorkflows = this.publishedOrLatestWorkflows;\n    const workflowInstances = this.workflowInstances;\n    const totalCount = workflowInstances.totalCount\n\n    const filterProps: FilterProps = {\n      pageSizeFilter: {\n        selectedPageSize: this.currentPageSize,\n        onChange: this.onPageSizeChanged\n      },\n      orderByFilter: {\n        selectedOrderBy: this.orderBy,\n        onChange: this.onOrderByChanged\n      },\n      statusFilter: {\n        selectedStatus: this.selectedStatus,\n        onChange: this.onWorkflowStatusChanged\n      },\n      subStatusFilter: {\n        selectedStatus: this.selectedSubStatus,\n        onChange: this.onWorkflowSubStatusChanged\n      },\n      workflowFilter: {\n        workflows: publishedOrLatestWorkflows,\n        selectedWorkflowDefinitionId: this.selectedWorkflowDefinitionId,\n        onChange: this.onWorkflowChanged\n      },\n      resetFilter: async () => {\n        this.resetPagination();\n        this.currentPageSize = WorkflowInstanceBrowser.DEFAULT_PAGE_SIZE;\n        this.selectedStatus = undefined\n        this.selectedSubStatus = undefined\n        this.orderBy = undefined\n        this.selectedWorkflowDefinitionId = undefined\n\n        await this.loadWorkflowInstances();\n      },\n      onBulkDelete: this.onDeleteManyClick,\n      onBulkCancel: this.onCancelManyClick\n    };\n\n    return (\n      <Host class=\"tw-block\">\n\n        <div class=\"tw-pt-4\">\n          <h2 class=\"tw-text-lg tw-font-medium tw-ml-4 tw-mb-2\">Workflow Instances</h2>\n\n          <Search onSearch={this.onSearch}/>\n          <Filter {...filterProps}/>\n\n          <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n            <table class=\"default-table\">\n              <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" value=\"true\" checked={this.getSelectAllState()}\n                         onChange={e => this.onSelectAllCheckChange(e)}\n                         ref={el => this.selectAllCheckbox = el}/>\n                </th>\n                <th><span class=\"lg:tw-pl-2\">ID</span></th>\n                <th>Correlation</th>\n                <th>Workflow</th>\n                <th class=\"tw-align-right\">Version</th>\n                <th>Name</th>\n                <th>Status</th>\n                <th>Created</th>\n                <th>Finished</th>\n                <th/>\n              </tr>\n              </thead>\n              <tbody class=\"tw-bg-white tw-divide-y tw-divide-gray-100\">\n              {workflowInstances.items.map(workflowInstance => {\n                const statusColor = getSubStatusColor(workflowInstance.subStatus);\n                const isSelected = this.selectedWorkflowInstanceIds.findIndex(x => x === workflowInstance.id) >= 0;\n                const workflow: WorkflowDefinitionSummary = publishedOrLatestWorkflows.find(x => x.definitionId == workflowInstance.definitionId);\n                const workflowName = !!workflow ? (workflow.name || 'Untitled') : '(Definition not found)';\n\n                return (\n                  <tr>\n                    <td>\n                      <input type=\"checkbox\" value={workflowInstance.id} checked={isSelected} onChange={e => this.onWorkflowInstanceCheckChange(e, workflowInstance)}/>\n                    </td>\n                    <td>\n                      <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                        <a onClick={e => this.onWorkflowInstanceClick(e, workflowInstance)} href=\"#\" class=\"tw-truncate hover:tw-text-gray-600\"><span>{workflowInstance.id}</span></a>\n                      </div>\n                    </td>\n\n                    <td>{workflowInstance.correlationId}</td>\n                    <td>{workflowName}</td>\n                    <td class=\"tw-align-right\">{workflowInstance.version}</td>\n                    <td>{workflowInstance.name}</td>\n                    <td>\n                      <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                        <div class={`tw-flex-shrink-0 tw-w-2.5 tw-h-2.5 tw-rounded-full ${statusColor}`}/>\n                        <span>{workflowInstance.status}</span>\n                      </div>\n                    </td>\n                    <td>{formatTimestamp(workflowInstance.createdAt, '-')}</td>\n                    <td>{formatTimestamp(workflowInstance.finishedAt, '-')}</td>\n                    <td class=\"tw-pr-6\">\n                      <elsa-context-menu menuItems={[\n                        {text: 'Edit', handler: e => this.onWorkflowInstanceClick(e, workflowInstance), icon: <EditIcon/>},\n                        {text: 'Delete', handler: e => this.onDeleteClick(e, workflowInstance), icon: <DeleteIcon/>}\n                      ]}/>\n                    </td>\n                  </tr>\n                );\n              })}\n              </tbody>\n            </table>\n            <elsa-pager page={this.currentPage} pageSize={this.currentPageSize} totalCount={totalCount} onPaginated={this.onPaginated}/>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  private onDeleteManyClick = async () => {\n    if(this.selectedWorkflowInstanceIds.length == 0)\n      return;\n\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to delete selected workflow instances?\"),\n      {\n        actions: [DefaultModalActions.Delete(async () => {\n          await this.workflowInstancesApi.deleteMany({workflowInstanceIds: this.selectedWorkflowInstanceIds});\n          await this.loadWorkflowInstances();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  };\n\n  private onCancelManyClick = async () => {\n    if(this.selectedWorkflowInstanceIds.length == 0)\n      return;\n\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to cancel selected workflow instances?\"),\n      {\n        actions: [DefaultModalActions.Yes(async () => {\n          await this.workflowInstancesApi.cancelMany({workflowInstanceIds: this.selectedWorkflowInstanceIds});\n          await this.loadWorkflowInstances();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  };\n\n  private resetPagination = () => {\n    this.currentPage = 0;\n    this.selectedWorkflowInstanceIds = [];\n  };\n\n  private async loadWorkflowInstances() {\n\n    const request: ListWorkflowInstancesRequest = {\n      searchTerm: this.searchTerm,\n      definitionId: this.selectedWorkflowDefinitionId,\n      status: this.selectedStatus,\n      subStatus: this.selectedSubStatus,\n      orderBy: this.orderBy,\n      orderDirection: OrderDirection.Descending,\n      page: this.currentPage,\n      pageSize: this.currentPageSize\n    };\n\n    persistRequest(request)\n    this.workflowInstances = await this.workflowInstancesApi.list(request);\n  }\n\n  private loadWorkflowDefinitions = async () => {\n    const versionOptions: VersionOptions = {allVersions: true};\n    const workflows = await this.workflowDefinitionsApi.list({versionOptions});\n    this.publishedOrLatestWorkflows = this.selectLatestWorkflows(workflows.items);\n  };\n\n  private getSelectAllState = () => {\n    const {items} = this.workflowInstances;\n    const selectedWorkflowInstanceIds = this.selectedWorkflowInstanceIds;\n    return items.findIndex(item => !selectedWorkflowInstanceIds.includes(item.id)) < 0;\n  }\n\n  private setSelectAllIndeterminateState = () => {\n    if (this.selectAllCheckbox) {\n      const selectedItems = this.workflowInstances.items.filter(item => this.selectedWorkflowInstanceIds.includes(item.id));\n      this.selectAllCheckbox.indeterminate = selectedItems.length != 0 && selectedItems.length != this.workflowInstances.items.length;\n    }\n  }\n\n  private selectLatestWorkflows = (workflows: Array<WorkflowDefinitionSummary>): Array<WorkflowDefinitionSummary> => {\n    const groups = _.groupBy(workflows, 'definitionId');\n    return _.map(groups, x => _.first(_.orderBy(x, 'version', 'desc')));\n  }\n\n  private onSearch = async (term: string) => {\n    this.searchTerm = term;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onPageSizeChanged = async (pageSize: number) => {\n    this.currentPageSize = pageSize;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onWorkflowChanged = async (definitionId: string) => {\n    this.selectedWorkflowDefinitionId = definitionId;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onWorkflowStatusChanged = async (status: WorkflowStatus) => {\n    this.selectedStatus = status;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onWorkflowSubStatusChanged = async (status: WorkflowSubStatus) => {\n    this.selectedSubStatus = status;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onOrderByChanged = async (orderBy: OrderBy) => {\n    this.orderBy = orderBy;\n    await this.loadWorkflowInstances();\n  };\n\n  private async onDeleteClick(e: MouseEvent, workflowInstance: WorkflowInstanceSummary) {\n    // const result = await this.confirmDialog.show(t('DeleteConfirmationModel.Title'), t('DeleteConfirmationModel.Message'));\n    //\n    // if (!result)\n    //   return;\n    //\n\n    await this.workflowInstancesApi.delete(workflowInstance);\n    await this.loadWorkflowInstances();\n  }\n\n  private onWorkflowInstanceClick = async (e: MouseEvent, workflowInstance: WorkflowInstanceSummary) => {\n    e.preventDefault();\n    this.workflowInstanceSelected.emit(workflowInstance);\n  }\n\n  private onSelectAllCheckChange(e: Event) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n    this.selectAllChecked = isChecked;\n    this.selectedWorkflowInstanceIds = updateSelectedWorkflowInstances(isChecked, this.workflowInstances, this.selectedWorkflowInstanceIds);\n  }\n\n  private onWorkflowInstanceCheckChange(e: Event, workflowInstance: WorkflowInstanceSummary) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n\n    if (isChecked)\n      this.selectedWorkflowInstanceIds = [...this.selectedWorkflowInstanceIds, workflowInstance.id];\n    else\n      this.selectedWorkflowInstanceIds = this.selectedWorkflowInstanceIds.filter(x => x != workflowInstance.id);\n\n    this.setSelectAllIndeterminateState();\n  }\n\n  onPaginated = async (e: CustomEvent<PagerData>) => {\n    this.currentPage = e.detail.page;\n    await this.loadWorkflowInstances();\n  };\n}\n"],"mappings":"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"}