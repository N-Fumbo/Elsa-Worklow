{"version":3,"names":["PublishIcon","h","xmlns","class","fill","viewBox","stroke","d","UnPublishIcon","Search","onSearch","onSubmit","e","preventDefault","form","target","formData","FormData","searchTerm","get","toString","onSearchDebounced","debounce","onKeyUp","term","value","htmlFor","name","placeholder","type","Filter","pageSizeFilter","orderByFilter","onBulkDelete","onBulkPublish","onBulkUnpublish","labelFilter","BulkActions","PageSizeFilter","Object","assign","OrderByFilter","bulkActions","text","onBulkActionSelected","action","detail","handler","items","theme","icon","BulkActionsIcon","origin","DropdownButtonOrigin","TopLeft","onItemSelected","selectedPageSize","onChange","selectedPageSizeText","pageSizes","map","x","isSelected","onPageSizeChanged","parseInt","PageSizeIcon","TopRight","selectedOrderBy","selectedOrderByText","orderByValues","WorkflowDefinitionsOrderBy","Name","Created","onOrderByChanged","OrderByIcon","updateSelectedWorkflowDefinitions","isChecked","workflowDefinitions","selectedWorkflowDefinitionIds","currentItems","filter","item","isReadonly","definitionId","concat","includes","key","getRequest","json","localStorage","getItem","JSON","parse","persistRequest","request","setItem","stringify","WorkflowDefinitionBrowser","constructor","hostRef","this","onNewDefinitionClick","async","newWorkflowDefinitionSelected","emit","resetPagination","loadWorkflowDefinitions","onDeleteManyClick","length","modalDialogService","show","DefaultContents","Warning","actions","DefaultModalActions","Delete","api","deleteMany","definitionIds","activityDescriptorManager","refresh","Cancel","modalType","ModalType","Confirmation","onPublishManyClick","Publish","publishMany","onUnpublishManyClick","Unpublish","unpublishMany","onWorkflowDefinitionClick","workflowDefinition","workflowDefinitionSelected","onWorkflowInstancesClick","workflowInstancesSelected","onPaginated","currentPage","page","pageSize","currentPageSize","orderBy","onLabelChange","labels","getSelectAllState","selectedWorkflowInstanceIds","findIndex","setSelectAllIndeterminateState","selectAllCheckbox","selectedItems","indeterminate","totalCount","DEFAULT_PAGE_SIZE","Container","WorkflowDefinitionsApi","ModalDialogService","ActivityDescriptorManager","persistedRequest","publish","retract","delete","materializerName","versionOptions","isLatest","label","latestWorkflowDefinitions","list","unpublishedWorkflowDefinitionIds","isPublished","publishedWorkflowDefinitions","onWorkflowDefinitionCheckChange","checkBox","checked","onSelectAllCheckChange","selectAllChecked","render","filterProps","selectedLabels","onSelectedLabelsChanged","buttonClass","containerClass","Host","ref","el","latestVersionNumber","version","publishedVersion","find","publishedVersionNumber","workflowDisplayName","trim","disabled","onClick","href","menuItems","EditIcon","onUnPublishClick","onPublishClick","onDeleteClick","DeleteIcon","MIN_PAGE_SIZE","MAX_PAGE_SIZE","START_PAGE"],"sources":["./src/components/icons/tooling/publish.tsx","./src/components/icons/tooling/un-publish.tsx","./src/modules/workflow-definitions/components/search.tsx","./src/modules/workflow-definitions/components/filter.tsx","./src/modules/workflow-definitions/services/utils.ts","./src/modules/workflow-definitions/services/lookup-persistence.ts","./src/modules/workflow-definitions/components/browser.tsx"],"sourcesContent":["import {FunctionalComponent, h} from \"@stencil/core\";\n\nexport const PublishIcon: FunctionalComponent = () =>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"tw-h-5 tw-w-5 tw-text-gray-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"/>\n  </svg>;\n","import {FunctionalComponent, h} from \"@stencil/core\";\n\nexport const UnPublishIcon: FunctionalComponent = () =>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"tw-h-5 tw-w-5 tw-text-gray-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\n  </svg>;\n","import {FunctionalComponent, h} from \"@stencil/core\";\nimport {debounce} from 'lodash';\n\nexport interface SearchProps {\n  onSearch: (term: string) => void;\n}\n\nexport const Search: FunctionalComponent<SearchProps> = ({onSearch}) => {\n\n  const onSubmit = (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const formData = new FormData(form);\n    const searchTerm: FormDataEntryValue = formData.get('searchTerm').toString();\n\n    onSearch(searchTerm);\n  }\n\n  const onSearchDebounced = debounce(onSearch, 200);\n\n  const onKeyUp = (e: KeyboardEvent) => {\n    const term = (e.target as HTMLInputElement).value;\n    onSearchDebounced(term);\n  };\n\n  return <div class=\"tw-relative tw-z-10 tw-flex-shrink-0 tw-flex tw-h-16 tw-bg-white tw-border-b tw-border-gray-200\">\n    <div class=\"tw-flex-1 tw-px-4 tw-flex tw-justify-between sm:tw-px-6 lg:tw-px-8\">\n      <div class=\"tw-flex-1 tw-flex\">\n        <form class=\"tw-w-full tw-flex md:tw-ml-0\" onSubmit={onSubmit}>\n          <label htmlFor=\"search_field\" class=\"tw-sr-only\">Search</label>\n          <div class=\"tw-relative tw-w-full tw-text-gray-400 focus-within:tw-text-gray-600\">\n            <div\n              class=\"tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pointer-events-none\">\n              <svg class=\"tw-h-5 tw-w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"/>\n              </svg>\n            </div>\n            <input name=\"searchTerm\"\n                   onKeyUp={onKeyUp}\n                   class=\"tw-block tw-w-full tw-h-full tw-pl-8 tw-pr-3 tw-py-2 tw-rounded-md tw-text-gray-900 tw-placeholder-cool-gray-500 focus:tw-placeholder-cool-gray-400 sm:tw-text-sm tw-border-0 focus:tw-outline-none focus:tw-ring-0\"\n                   placeholder=\"Search\"\n                   type=\"search\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>;\n}\n","import { FunctionalComponent, h } from '@stencil/core';\nimport {DropdownButtonItem, DropdownButtonOrigin} from \"../../../components/shared/dropdown-button/models\";\nimport {BulkActionsIcon, OrderByIcon, PageSizeIcon} from \"../../../components/icons/tooling\";\nimport {WorkflowDefinitionsOrderBy} from \"../services/api\";\n\nexport interface PageSizeFilterProps {\n  selectedPageSize: number;\n  onChange: (pageSize: number) => void;\n}\n\nexport interface OrderByFilterProps {\n  selectedOrderBy?: WorkflowDefinitionsOrderBy;\n  onChange: (orderBy: WorkflowDefinitionsOrderBy) => void;\n}\n\nexport interface LabelFilterProps {\n  selectedLabels?: Array<string>;\n  onSelectedLabelsChanged: (e: CustomEvent<Array<string>>) => void;\n  buttonClass?: string;\n  containerClass?: string;\n}\n\nexport interface FilterProps extends BulkActionsProps {\n  pageSizeFilter: PageSizeFilterProps;\n  orderByFilter: OrderByFilterProps;\n  labelFilter: LabelFilterProps;\n}\n\nexport interface BulkActionsProps {\n  onBulkDelete: () => void;\n  onBulkPublish: () => void;\n  onBulkUnpublish: () => void;\n}\n\nexport const Filter: FunctionalComponent<FilterProps> = ({ pageSizeFilter, orderByFilter, onBulkDelete, onBulkPublish, onBulkUnpublish, labelFilter }) => {\n  return (\n    <div class=\"tw-p-8 tw-flex tw-content-end tw-justify-right tw-bg-white tw-space-x-4\">\n      <div class=\"tw-flex-shrink-0\">\n        <BulkActions onBulkDelete={onBulkDelete} onBulkPublish={onBulkPublish} onBulkUnpublish={onBulkUnpublish} />\n      </div>\n      <div class=\"tw-flex-1\">&nbsp;</div>\n\n      <PageSizeFilter {...pageSizeFilter} />\n\n      <OrderByFilter {...orderByFilter} />\n    </div>\n  );\n};\n\nconst BulkActions: FunctionalComponent<BulkActionsProps> = ({ onBulkDelete, onBulkPublish, onBulkUnpublish }) => {\n  const bulkActions = [\n    {\n      text: 'Delete',\n      name: 'Delete',\n    },\n    {\n      text: 'Publish',\n      name: 'Publish',\n    },\n    {\n      text: 'Unpublish',\n      name: 'Unpublish',\n    },\n  ];\n\n  const onBulkActionSelected = (e: CustomEvent<DropdownButtonItem>) => {\n    const action = e.detail;\n    switch (action.name) {\n      case 'Delete':\n        onBulkDelete();\n        break;\n      case 'Publish':\n        onBulkPublish();\n        break;\n      case 'Unpublish':\n        onBulkUnpublish();\n        break;\n\n      default:\n        action.handler();\n    }\n  };\n\n  return <elsa-dropdown-button text=\"Bulk Actions\"\n                               items={bulkActions}\n                               theme=\"Secondary\"\n                               icon={<BulkActionsIcon />}\n                               origin={DropdownButtonOrigin.TopLeft}\n                               onItemSelected={onBulkActionSelected} />;\n};\n\nconst PageSizeFilter: FunctionalComponent<PageSizeFilterProps> = ({ selectedPageSize, onChange }) => {\n  const selectedPageSizeText = `Page size: ${selectedPageSize}`;\n  const pageSizes: Array<number> = [5, 10, 15, 20, 30, 50, 100];\n\n  const items: Array<DropdownButtonItem> = pageSizes.map(x => {\n    const text = '' + x;\n    return { text: text, isSelected: x == selectedPageSize, value: x };\n  });\n\n  const onPageSizeChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(parseInt(e.detail.value));\n\n  return <elsa-dropdown-button text={selectedPageSizeText} items={items} theme=\"Secondary\" icon={<PageSizeIcon />} origin={DropdownButtonOrigin.TopRight} onItemSelected={onPageSizeChanged} />;\n};\n\nconst OrderByFilter: FunctionalComponent<OrderByFilterProps> = ({ selectedOrderBy, onChange }) => {\n  const selectedOrderByText = !!selectedOrderBy ? `Ordered by: ${selectedOrderBy}` : 'Order by';\n  const orderByValues: Array<WorkflowDefinitionsOrderBy> = [WorkflowDefinitionsOrderBy.Name, WorkflowDefinitionsOrderBy.Created];\n  const items: Array<DropdownButtonItem> = orderByValues.map(x => ({ text: x, value: x, isSelected: x == selectedOrderBy }));\n  const onOrderByChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button text={selectedOrderByText} items={items} theme=\"Secondary\" icon={<OrderByIcon />} origin={DropdownButtonOrigin.TopRight} onItemSelected={onOrderByChanged} />;\n};\n","import {PagedList} from \"../../../models\";\nimport {WorkflowDefinitionSummary} from \"../models/entities\";\n\nexport function updateSelectedWorkflowDefinitions(isChecked: boolean, workflowDefinitions: PagedList<WorkflowDefinitionSummary>, selectedWorkflowDefinitionIds: Array<string>) {\n  const currentItems = workflowDefinitions.items.filter(item =>!item.isReadonly).map(x => x.definitionId);\n\n  return isChecked\n    ? selectedWorkflowDefinitionIds.concat(currentItems.filter(item => !selectedWorkflowDefinitionIds.includes(item)))\n    : selectedWorkflowDefinitionIds.filter(item => !currentItems.includes(item));\n}\n","import { ListWorkflowDefinitionsRequest } from \"./api\";\n\nconst key = 'LS/wfDefinitionBrowser';\n\nexport function getRequest(): ListWorkflowDefinitionsRequest | undefined {\n  var json = localStorage.getItem(key);\n\n  if (!json) return;\n\n  return JSON.parse(json);\n}\nexport function persistRequest(request: ListWorkflowDefinitionsRequest) {\n  localStorage.setItem(key, JSON.stringify(request));\n}\n","import {Component, Event, EventEmitter, h, Host, Method, Prop, State, Watch} from '@stencil/core';\nimport {OrderBy, PagedList, VersionOptions} from '../../../models';\nimport {Container} from 'typedi';\nimport {DeleteIcon, EditIcon, PublishIcon, UnPublishIcon} from '../../../components/icons/tooling';\nimport { Search } from \"./search\";\nimport { Filter, FilterProps } from './filter';\nimport {PagerData} from '../../../components/shared/pager/pager';\nimport {updateSelectedWorkflowDefinitions} from '../services/utils';\nimport {WorkflowDefinitionSummary} from \"../models/entities\";\nimport {ListWorkflowDefinitionsRequest, WorkflowDefinitionsApi, WorkflowDefinitionsOrderBy} from \"../services/api\";\nimport {ModalDialogService, DefaultModalActions, DefaultContents, ModalType} from \"../../../components/shared/modal-dialog\";\nimport {ActivityDescriptorManager} from \"../../../services\";\nimport { getRequest, persistRequest } from '../services/lookup-persistence';\n\n@Component({\n  tag: 'elsa-workflow-definition-browser',\n  shadow: false,\n})\nexport class WorkflowDefinitionBrowser {\n  static readonly DEFAULT_PAGE_SIZE = 15;\n  static readonly MIN_PAGE_SIZE = 5;\n  static readonly MAX_PAGE_SIZE = 100;\n  static readonly START_PAGE = 0;\n\n  private readonly api: WorkflowDefinitionsApi;\n  private selectAllCheckbox: HTMLInputElement;\n  private readonly modalDialogService: ModalDialogService;\n  private readonly activityDescriptorManager: ActivityDescriptorManager;\n\n  constructor() {\n    this.api = Container.get(WorkflowDefinitionsApi);\n    this.modalDialogService = Container.get(ModalDialogService);\n    this.activityDescriptorManager = Container.get(ActivityDescriptorManager);\n  }\n\n  @Event() workflowDefinitionSelected: EventEmitter<WorkflowDefinitionSummary>;\n  @Event() workflowInstancesSelected: EventEmitter<WorkflowDefinitionSummary>;\n  @Event() public newWorkflowDefinitionSelected: EventEmitter;\n  @State() private workflowDefinitions: PagedList<WorkflowDefinitionSummary> = {items: [], totalCount: 0};\n  @State() private publishedWorkflowDefinitions: PagedList<WorkflowDefinitionSummary> = {items: [], totalCount: 0};\n  @State() private selectedWorkflowDefinitionIds: Array<string> = [];\n  @State() private currentPage: number = 0;\n  @State() private currentPageSize: number = WorkflowDefinitionBrowser.DEFAULT_PAGE_SIZE;\n  @State() private orderBy?: WorkflowDefinitionsOrderBy;\n  @State() private labels?: string[];\n  @State() private selectAllChecked: boolean;\n  @State() private searchTerm?: string;\n\n  async componentWillLoad() {\n    const persistedRequest = getRequest();\n\n    if (persistedRequest) {\n      this.currentPage = persistedRequest.page\n      this.currentPageSize = persistedRequest.pageSize\n      this.orderBy = persistedRequest.orderBy\n    }\n\n    await this.loadWorkflowDefinitions();\n  }\n\n  private onNewDefinitionClick = async () => {\n    this.newWorkflowDefinitionSelected.emit();\n  };\n\n  private onSearch = async (term: string) => {\n    this.searchTerm = term;\n    this.resetPagination();\n    await this.loadWorkflowDefinitions();\n  };\n\n\n  private async onPublishClick(e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) {\n    await this.api.publish(workflowDefinition);\n    await this.loadWorkflowDefinitions();\n  }\n\n  private async onUnPublishClick(e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) {\n    await this.api.retract(workflowDefinition);\n    await this.loadWorkflowDefinitions();\n  }\n\n  private async onDeleteClick(e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) {\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to delete this workflow definition?\"),\n      {\n        actions: [DefaultModalActions.Delete(async () => {\n          await this.api.delete(workflowDefinition);\n          await this.loadWorkflowDefinitions();\n          await this.activityDescriptorManager.refresh();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  }\n\n  private onDeleteManyClick = async () => {\n    if(this.selectedWorkflowDefinitionIds.length == 0)\n      return;\n\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to delete selected workflow definitions?\"),\n      {\n        actions: [DefaultModalActions.Delete(async () => {\n          await this.api.deleteMany({definitionIds: this.selectedWorkflowDefinitionIds});\n          await this.loadWorkflowDefinitions();\n          await this.activityDescriptorManager.refresh();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  };\n\n  private onPublishManyClick = async () => {\n    if(this.selectedWorkflowDefinitionIds.length == 0)\n      return;\n\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to publish selected workflow definitions?\"),\n      {\n        actions: [DefaultModalActions.Publish(async () => {\n          await this.api.publishMany({definitionIds: this.selectedWorkflowDefinitionIds});\n          await this.loadWorkflowDefinitions();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  };\n\n  private onUnpublishManyClick = async () => {\n    if(this.selectedWorkflowDefinitionIds.length == 0)\n      return;\n\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to unpublish selected workflow definitions?\"),\n      {\n        actions: [DefaultModalActions.Unpublish(async () => {\n          await this.api.unpublishMany({definitionIds: this.selectedWorkflowDefinitionIds});\n          await this.loadWorkflowDefinitions();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  };\n\n  private onWorkflowDefinitionClick = async (e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) => {\n    e.preventDefault();\n    this.workflowDefinitionSelected.emit(workflowDefinition);\n  };\n\n  private onWorkflowInstancesClick = async (e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) => {\n    e.preventDefault();\n    this.workflowInstancesSelected.emit(workflowDefinition);\n  };\n\n  private async loadWorkflowDefinitions() {\n\n    // TODO: Load only json-based workflow definitions for now.\n    // Later, also allow CLR-based workflows to be \"edited\" (publish / unpublish / position activities / set variables, etc.)\n    const materializerName = 'Json';\n\n    const request: ListWorkflowDefinitionsRequest = {\n      searchTerm: this.searchTerm,\n      materializerName,\n      page: this.currentPage,\n      pageSize: this.currentPageSize,\n      versionOptions: {isLatest: true},\n      orderBy: this.orderBy,\n      label: this.labels,\n    };\n    persistRequest(request)\n\n    const latestWorkflowDefinitions = await this.api.list(request);\n    const unpublishedWorkflowDefinitionIds = latestWorkflowDefinitions.items.filter(x => !x.isPublished).map(x => x.definitionId);\n\n    this.publishedWorkflowDefinitions = await this.api.list({\n      materializerName,\n      definitionIds: unpublishedWorkflowDefinitionIds,\n      versionOptions: {isPublished: true},\n    });\n\n    this.workflowDefinitions = latestWorkflowDefinitions;\n  }\n\n  private onPaginated = async (e: CustomEvent<PagerData>) => {\n    this.currentPage = e.detail.page;\n    await this.loadWorkflowDefinitions();\n  };\n\n  private onPageSizeChanged = async (pageSize: number) => {\n    this.currentPageSize = pageSize;\n    this.resetPagination();\n    await this.loadWorkflowDefinitions();\n  };\n\n  private onOrderByChanged = async (orderBy: WorkflowDefinitionsOrderBy) => {\n    this.orderBy = orderBy;\n    await this.loadWorkflowDefinitions();\n  };\n\n  private onLabelChange = async (e: CustomEvent<Array<string>>) => {\n    this.labels = e.detail;\n    await this.loadWorkflowDefinitions();\n  };\n\n  private resetPagination = () => {\n    this.currentPage = 0;\n    this.selectedWorkflowDefinitionIds = [];\n  };\n\n  private getSelectAllState = () => {\n    const {items} = this.workflowDefinitions;\n    const selectedWorkflowInstanceIds = this.selectedWorkflowDefinitionIds;\n    return items.findIndex(item => !selectedWorkflowInstanceIds.includes(item.definitionId)) < 0;\n  };\n\n  private setSelectAllIndeterminateState = () => {\n    if (this.selectAllCheckbox) {\n      const selectedItems = this.workflowDefinitions.items.filter(item => this.selectedWorkflowDefinitionIds.includes(item.definitionId));\n      this.selectAllCheckbox.indeterminate = selectedItems.length != 0 && selectedItems.length != this.workflowDefinitions.items.length;\n    }\n  };\n\n  private onWorkflowDefinitionCheckChange(e: Event, workflowDefinition: WorkflowDefinitionSummary) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n\n    if (isChecked) this.selectedWorkflowDefinitionIds = [...this.selectedWorkflowDefinitionIds, workflowDefinition.definitionId];\n    else this.selectedWorkflowDefinitionIds = this.selectedWorkflowDefinitionIds.filter(x => x != workflowDefinition.definitionId);\n\n    this.setSelectAllIndeterminateState();\n  }\n\n  private onSelectAllCheckChange(e: Event) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n    this.selectAllChecked = isChecked;\n    this.selectedWorkflowDefinitionIds = updateSelectedWorkflowDefinitions(isChecked, this.workflowDefinitions, this.selectedWorkflowDefinitionIds);\n  }\n\n  render() {\n    const workflowDefinitions = this.workflowDefinitions;\n    const publishedWorkflowDefinitions = this.publishedWorkflowDefinitions.items;\n    const totalCount = workflowDefinitions.totalCount;\n\n    const filterProps: FilterProps = {\n      pageSizeFilter: {\n        selectedPageSize: this.currentPageSize,\n        onChange: this.onPageSizeChanged,\n      },\n      orderByFilter: {\n        selectedOrderBy: this.orderBy,\n        onChange: this.onOrderByChanged,\n      },\n      labelFilter: {\n        selectedLabels: this.labels,\n        onSelectedLabelsChanged: this.onLabelChange,\n        buttonClass: 'tw-text-gray-500 hover:tw-text-gray-300',\n        containerClass: 'tw-mt-1.5',\n      },\n      onBulkDelete: this.onDeleteManyClick,\n      onBulkPublish: this.onPublishManyClick,\n      onBulkUnpublish: this.onUnpublishManyClick\n    };\n\n    return (\n      <Host class=\"tw-block\">\n        <div class=\"tw-pt-4\">\n          <h2 class=\"tw-text-lg tw-font-medium tw-ml-4 tw-mb-2\">Workflow Definitions</h2>\n\n          <Search onSearch={this.onSearch} />\n          <Filter {...filterProps} />\n          <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n            <table class=\"default-table\">\n              <thead>\n              <tr>\n                <th>\n                  <input\n                    type=\"checkbox\"\n                    value=\"true\"\n                    checked={this.getSelectAllState()}\n                    onChange={e => this.onSelectAllCheckChange(e)}\n                    ref={el => (this.selectAllCheckbox = el)}\n                  />\n                </th>\n                <th>\n                  <span class=\"lg:tw-pl-2\">Name</span>\n                </th>\n                <th>Instances</th>\n                <th class=\"tw-align-right\">Latest Version</th>\n                <th class=\"tw-align-right\">Published Version</th>\n                <th/>\n              </tr>\n              </thead>\n              <tbody>\n              {workflowDefinitions.items.map(workflowDefinition => {\n                const latestVersionNumber = workflowDefinition.version;\n                const {isPublished} = workflowDefinition;\n                const publishedVersion: WorkflowDefinitionSummary = isPublished\n                  ? workflowDefinition\n                  : publishedWorkflowDefinitions.find(x => x.definitionId == workflowDefinition.definitionId);\n                const publishedVersionNumber = !!publishedVersion ? publishedVersion.version : '-';\n\n                const isReadonly = workflowDefinition.isReadonly;\n\n                const isSelected = this.selectedWorkflowDefinitionIds.findIndex(x => x === workflowDefinition.definitionId) >= 0;\n                let workflowDisplayName = workflowDefinition.name;\n\n                if (!workflowDisplayName || workflowDisplayName.trim().length == 0) workflowDisplayName = 'Untitled';\n\n                return (\n                  <tr>\n                    <td>\n                      <input\n                        disabled={isReadonly}\n                        type=\"checkbox\"\n                        value={workflowDefinition.definitionId}\n                        checked={isSelected}\n                        onChange={e => this.onWorkflowDefinitionCheckChange(e, workflowDefinition)}\n                      />\n                    </td>\n                    <td>\n                      <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                        <a onClick={e => this.onWorkflowDefinitionClick(e, workflowDefinition)} href=\"#\" class=\"tw-truncate hover:tw-text-gray-600\">\n                          <span>{workflowDisplayName}</span>\n                        </a>\n                      </div>\n                    </td>\n\n                    <td>\n                      <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                      <a onClick={e => this.onWorkflowInstancesClick(e, workflowDefinition)} href=\"#\" class=\"tw-truncate hover:tw-text-gray-600\">\n                          Instances\n                        </a>\n                      </div>\n                    </td>\n\n                    <td class=\"tw-align-right\">{latestVersionNumber}</td>\n                    <td class=\"tw-align-right\">{publishedVersionNumber}</td>\n                    <td class=\"tw-pr-6\">\n                      {isReadonly ? \"\" :\n                        <elsa-context-menu\n                          menuItems={[\n                            { text: 'Edit', handler: e => this.onWorkflowDefinitionClick(e, workflowDefinition), icon: <EditIcon /> },\n                            isPublished\n                              ? { text: 'Unpublish', handler: e => this.onUnPublishClick(e, workflowDefinition), icon: <UnPublishIcon /> }\n                              : {\n                                text: 'Publish',\n                                handler: e => this.onPublishClick(e, workflowDefinition),\n                                icon: <PublishIcon />,\n                              },\n                            { text: 'Delete', handler: e => this.onDeleteClick(e, workflowDefinition), icon: <DeleteIcon /> },\n                          ]}\n                        />}\n                    </td>\n                  </tr>\n                );\n              })}\n              </tbody>\n            </table>\n            <elsa-pager page={this.currentPage} pageSize={this.currentPageSize} totalCount={totalCount} onPaginated={this.onPaginated}/>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"+aAEO,MAAMA,EAAmC,IAC9CC,EAAA,OAAKC,MAAM,6BAA6BC,MAAM,iCAAiCC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACpHL,EAAA,yBAAqB,QAAO,kBAAiB,QAAO,eAAc,IAAIM,EAAE,2FCFrE,MAAMC,EAAqC,IAChDP,EAAA,OAAKC,MAAM,6BAA6BC,MAAM,iCAAiCC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACpHL,EAAA,yBAAqB,QAAO,kBAAiB,QAAO,eAAc,IAAIM,EAAE,oGCGrE,MAAME,EAA2C,EAAEC,eAExD,MAAMC,EAAYC,IAChBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,OACf,MAAMC,EAAW,IAAIC,SAASH,GAC9B,MAAMI,EAAiCF,EAASG,IAAI,cAAcC,WAElEV,EAASQ,EAAW,EAGtB,MAAMG,EAAoBC,WAASZ,EAAU,KAE7C,MAAMa,EAAWX,IACf,MAAMY,EAAQZ,EAAEG,OAA4BU,MAC5CJ,EAAkBG,EAAK,EAGzB,OAAOvB,EAAA,OAAKE,MAAM,mGAChBF,EAAA,OAAKE,MAAM,sEACTF,EAAA,OAAKE,MAAM,qBACTF,EAAA,QAAME,MAAM,+BAA+BQ,SAAUA,GACnDV,EAAA,SAAOyB,QAAQ,eAAevB,MAAM,cAAY,UAChDF,EAAA,OAAKE,MAAM,wEACTF,EAAA,OACEE,MAAM,qFACNF,EAAA,OAAKE,MAAM,gBAAgBC,KAAK,eAAeC,QAAQ,aACrDJ,EAAA,oBAAgB,UAAS,YAAW,UAC9BM,EAAE,uHAGZN,EAAA,SAAO0B,KAAK,aACLJ,QAASA,EACTpB,MAAM,sNACNyB,YAAY,SACZC,KAAK,eAKhB,ECbD,MAAMC,EAA2C,EAAGC,iBAAgBC,gBAAeC,eAAcC,gBAAeC,kBAAiBC,iBAEpInC,EAAA,OAAKE,MAAM,2EACTF,EAAA,OAAKE,MAAM,oBACTF,EAACoC,EAAW,CAACJ,aAAcA,EAAcC,cAAeA,EAAeC,gBAAiBA,KAE1FlC,EAAA,OAAKE,MAAM,aAAW,KAEtBF,EAACqC,EAAcC,OAAAC,OAAA,GAAKT,IAEpB9B,EAACwC,EAAaF,OAAAC,OAAA,GAAKR,KAKzB,MAAMK,EAAqD,EAAGJ,eAAcC,gBAAeC,sBACzF,MAAMO,EAAc,CAClB,CACEC,KAAM,SACNhB,KAAM,UAER,CACEgB,KAAM,UACNhB,KAAM,WAER,CACEgB,KAAM,YACNhB,KAAM,cAIV,MAAMiB,EAAwBhC,IAC5B,MAAMiC,EAASjC,EAAEkC,OACjB,OAAQD,EAAOlB,MACb,IAAK,SACHM,IACA,MACF,IAAK,UACHC,IACA,MACF,IAAK,YACHC,IACA,MAEF,QACEU,EAAOE,U,EAIb,OAAO9C,EAAA,wBAAsB0C,KAAK,eACLK,MAAON,EACPO,MAAM,YACNC,KAAMjD,EAACkD,EAAe,MACtBC,OAAQC,EAAqBC,QAC7BC,eAAgBX,GAAwB,EAGvE,MAAMN,EAA2D,EAAGkB,mBAAkBC,eACpF,MAAMC,EAAuB,cAAcF,IAC3C,MAAMG,EAA2B,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAEzD,MAAMX,EAAmCW,EAAUC,KAAIC,IACrD,MAAMlB,EAAO,GAAKkB,EAClB,MAAO,CAAElB,KAAMA,EAAMmB,WAAYD,GAAKL,EAAkB/B,MAAOoC,EAAG,IAGpE,MAAME,EAAqBnD,GAAuC6C,EAASO,SAASpD,EAAEkC,OAAOrB,QAE7F,OAAOxB,EAAA,wBAAsB0C,KAAMe,EAAsBV,MAAOA,EAAOC,MAAM,YAAYC,KAAMjD,EAACgE,EAAY,MAAKb,OAAQC,EAAqBa,SAAUX,eAAgBQ,GAAqB,EAG/L,MAAMtB,EAAyD,EAAG0B,kBAAiBV,eACjF,MAAMW,IAAwBD,EAAkB,eAAeA,IAAoB,WACnF,MAAME,EAAmD,CAACC,EAA2BC,KAAMD,EAA2BE,SACtH,MAAMxB,EAAmCqB,EAAcT,KAAIC,IAAC,CAAOlB,KAAMkB,EAAGpC,MAAOoC,EAAGC,WAAYD,GAAKM,MACvG,MAAMM,EAAoB7D,GAAuC6C,EAAS7C,EAAEkC,OAAOrB,OAEnF,OAAOxB,EAAA,wBAAsB0C,KAAMyB,EAAqBpB,MAAOA,EAAOC,MAAM,YAAYC,KAAMjD,EAACyE,EAAW,MAAKtB,OAAQC,EAAqBa,SAAUX,eAAgBkB,GAAoB,E,SC5G5KE,EAAkCC,EAAoBC,EAA2DC,GAC/H,MAAMC,EAAeF,EAAoB7B,MAAMgC,QAAOC,IAAQA,EAAKC,aAAYtB,KAAIC,GAAKA,EAAEsB,eAE1F,OAAOP,EACHE,EAA8BM,OAAOL,EAAaC,QAAOC,IAASH,EAA8BO,SAASJ,MACzGH,EAA8BE,QAAOC,IAASF,EAAaM,SAASJ,IAC1E,CCPA,MAAMK,EAAM,yB,SAEIC,IACd,IAAIC,EAAOC,aAAaC,QAAQJ,GAEhC,IAAKE,EAAM,OAEX,OAAOG,KAAKC,MAAMJ,EACpB,C,SACgBK,EAAeC,GAC7BL,aAAaM,QAAQT,EAAKK,KAAKK,UAAUF,GAC3C,C,MCKaG,EAAyB,MAWpCC,YAAAC,G,mOA+BQC,KAAAC,qBAAuBC,UAC7BF,KAAKG,8BAA8BC,MAAM,EAGnCJ,KAAA1F,SAAW4F,MAAO9E,IACxB4E,KAAKlF,WAAaM,EAClB4E,KAAKK,wBACCL,KAAKM,yBAAyB,EA2B9BN,KAAAO,kBAAoBL,UAC1B,GAAGF,KAAKtB,8BAA8B8B,QAAU,EAC9C,OAEFR,KAAKS,mBAAmBC,MACtB,IAAMC,EAAgBC,QAAQ,mEAC9B,CACEC,QAAS,CAACC,EAAoBC,QAAOb,gBAC7BF,KAAKgB,IAAIC,WAAW,CAACC,cAAelB,KAAKtB,sCACzCsB,KAAKM,gCACLN,KAAKmB,0BAA0BC,SAAS,IAC5CN,EAAoBO,UACxBC,UAAWC,EAAUC,cACrB,EAGExB,KAAAyB,mBAAqBvB,UAC3B,GAAGF,KAAKtB,8BAA8B8B,QAAU,EAC9C,OAEFR,KAAKS,mBAAmBC,MACtB,IAAMC,EAAgBC,QAAQ,oEAC9B,CACEC,QAAS,CAACC,EAAoBY,SAAQxB,gBAC9BF,KAAKgB,IAAIW,YAAY,CAACT,cAAelB,KAAKtB,sCAC1CsB,KAAKM,yBAAyB,IAClCQ,EAAoBO,UACxBC,UAAWC,EAAUC,cACrB,EAGExB,KAAA4B,qBAAuB1B,UAC7B,GAAGF,KAAKtB,8BAA8B8B,QAAU,EAC9C,OAEFR,KAAKS,mBAAmBC,MACtB,IAAMC,EAAgBC,QAAQ,sEAC9B,CACEC,QAAS,CAACC,EAAoBe,WAAU3B,gBAChCF,KAAKgB,IAAIc,cAAc,CAACZ,cAAelB,KAAKtB,sCAC5CsB,KAAKM,yBAAyB,IAClCQ,EAAoBO,UACxBC,UAAWC,EAAUC,cACrB,EAGExB,KAAA+B,0BAA4B7B,MAAO1F,EAAewH,KACxDxH,EAAEC,iBACFuF,KAAKiC,2BAA2B7B,KAAK4B,EAAmB,EAGlDhC,KAAAkC,yBAA2BhC,MAAO1F,EAAewH,KACvDxH,EAAEC,iBACFuF,KAAKmC,0BAA0B/B,KAAK4B,EAAmB,EAgCjDhC,KAAAoC,YAAclC,MAAO1F,IAC3BwF,KAAKqC,YAAc7H,EAAEkC,OAAO4F,WACtBtC,KAAKM,yBAAyB,EAG9BN,KAAArC,kBAAoBuC,MAAOqC,IACjCvC,KAAKwC,gBAAkBD,EACvBvC,KAAKK,wBACCL,KAAKM,yBAAyB,EAG9BN,KAAA3B,iBAAmB6B,MAAOuC,IAChCzC,KAAKyC,QAAUA,QACTzC,KAAKM,yBAAyB,EAG9BN,KAAA0C,cAAgBxC,MAAO1F,IAC7BwF,KAAK2C,OAASnI,EAAEkC,aACVsD,KAAKM,yBAAyB,EAG9BN,KAAAK,gBAAkB,KACxBL,KAAKqC,YAAc,EACnBrC,KAAKtB,8BAAgC,EAAE,EAGjCsB,KAAA4C,kBAAoB,KAC1B,MAAMhG,MAACA,GAASoD,KAAKvB,oBACrB,MAAMoE,EAA8B7C,KAAKtB,8BACzC,OAAO9B,EAAMkG,WAAUjE,IAASgE,EAA4B5D,SAASJ,EAAKE,gBAAiB,CAAC,EAGtFiB,KAAA+C,+BAAiC,KACvC,GAAI/C,KAAKgD,kBAAmB,CAC1B,MAAMC,EAAgBjD,KAAKvB,oBAAoB7B,MAAMgC,QAAOC,GAAQmB,KAAKtB,8BAA8BO,SAASJ,EAAKE,gBACrHiB,KAAKgD,kBAAkBE,cAAgBD,EAAczC,QAAU,GAAKyC,EAAczC,QAAUR,KAAKvB,oBAAoB7B,MAAM4D,M,4BAhLlD,CAAC5D,MAAO,GAAIuG,WAAY,G,kCACf,CAACvG,MAAO,GAAIuG,WAAY,G,mCAC9C,G,iBACzB,E,qBACItD,EAA0BuD,kB,uGAZnEpD,KAAKgB,IAAMqC,EAAUtI,IAAIuI,GACzBtD,KAAKS,mBAAqB4C,EAAUtI,IAAIwI,GACxCvD,KAAKmB,0BAA4BkC,EAAUtI,IAAIyI,E,CAgBjDtD,0BACE,MAAMuD,EAAmBtE,IAEzB,GAAIsE,EAAkB,CACpBzD,KAAKqC,YAAcoB,EAAiBnB,KACpCtC,KAAKwC,gBAAkBiB,EAAiBlB,SACxCvC,KAAKyC,QAAUgB,EAAiBhB,O,OAG5BzC,KAAKM,yB,CAcLJ,qBAAqB1F,EAAewH,SACpChC,KAAKgB,IAAI0C,QAAQ1B,SACjBhC,KAAKM,yB,CAGLJ,uBAAuB1F,EAAewH,SACtChC,KAAKgB,IAAI2C,QAAQ3B,SACjBhC,KAAKM,yB,CAGLJ,oBAAoB1F,EAAewH,GACzChC,KAAKS,mBAAmBC,MACtB,IAAMC,EAAgBC,QAAQ,8DAC9B,CACEC,QAAS,CAACC,EAAoBC,QAAOb,gBAC7BF,KAAKgB,IAAI4C,OAAO5B,SAChBhC,KAAKM,gCACLN,KAAKmB,0BAA0BC,SAAS,IAC5CN,EAAoBO,UACxBC,UAAWC,EAAUC,c,CA4DnBtB,gCAIN,MAAM2D,EAAmB,OAEzB,MAAMnE,EAA0C,CAC9C5E,WAAYkF,KAAKlF,WACjB+I,mBACAvB,KAAMtC,KAAKqC,YACXE,SAAUvC,KAAKwC,gBACfsB,eAAgB,CAACC,SAAU,MAC3BtB,QAASzC,KAAKyC,QACduB,MAAOhE,KAAK2C,QAEdlD,EAAeC,GAEf,MAAMuE,QAAkCjE,KAAKgB,IAAIkD,KAAKxE,GACtD,MAAMyE,EAAmCF,EAA0BrH,MAAMgC,QAAOnB,IAAMA,EAAE2G,cAAa5G,KAAIC,GAAKA,EAAEsB,eAEhHiB,KAAKqE,mCAAqCrE,KAAKgB,IAAIkD,KAAK,CACtDL,mBACA3C,cAAeiD,EACfL,eAAgB,CAACM,YAAa,QAGhCpE,KAAKvB,oBAAsBwF,C,CA0CrBK,gCAAgC9J,EAAUwH,GAChD,MAAMuC,EAAW/J,EAAEG,OACnB,MAAM6D,EAAY+F,EAASC,QAE3B,GAAIhG,EAAWwB,KAAKtB,8BAAgC,IAAIsB,KAAKtB,8BAA+BsD,EAAmBjD,mBAC1GiB,KAAKtB,8BAAgCsB,KAAKtB,8BAA8BE,QAAOnB,GAAKA,GAAKuE,EAAmBjD,eAEjHiB,KAAK+C,gC,CAGC0B,uBAAuBjK,GAC7B,MAAM+J,EAAW/J,EAAEG,OACnB,MAAM6D,EAAY+F,EAASC,QAC3BxE,KAAK0E,iBAAmBlG,EACxBwB,KAAKtB,8BAAgCH,EAAkCC,EAAWwB,KAAKvB,oBAAqBuB,KAAKtB,8B,CAGnHiG,SACE,MAAMlG,EAAsBuB,KAAKvB,oBACjC,MAAM4F,EAA+BrE,KAAKqE,6BAA6BzH,MACvE,MAAMuG,EAAa1E,EAAoB0E,WAEvC,MAAMyB,EAA2B,CAC/BjJ,eAAgB,CACdyB,iBAAkB4C,KAAKwC,gBACvBnF,SAAU2C,KAAKrC,mBAEjB/B,cAAe,CACbmC,gBAAiBiC,KAAKyC,QACtBpF,SAAU2C,KAAK3B,kBAEjBrC,YAAa,CACX6I,eAAgB7E,KAAK2C,OACrBmC,wBAAyB9E,KAAK0C,cAC9BqC,YAAa,0CACbC,eAAgB,aAElBnJ,aAAcmE,KAAKO,kBACnBzE,cAAekE,KAAKyB,mBACpB1F,gBAAiBiE,KAAK4B,sBAGxB,OACE/H,EAACoL,EAAI,CAAClL,MAAM,YACVF,EAAA,OAAKE,MAAM,WACTF,EAAA,MAAIE,MAAM,6CAA2C,wBAErDF,EAACQ,EAAM,CAACC,SAAU0F,KAAK1F,WACvBT,EAAC6B,EAAMS,OAAAC,OAAA,GAAKwI,IACZ/K,EAAA,OAAKE,MAAM,gFACTF,EAAA,SAAOE,MAAM,iBACXF,EAAA,aACAA,EAAA,UACEA,EAAA,UACEA,EAAA,SACE4B,KAAK,WACLJ,MAAM,OACNmJ,QAASxE,KAAK4C,oBACdvF,SAAU7C,GAAKwF,KAAKyE,uBAAuBjK,GAC3C0K,IAAKC,GAAOnF,KAAKgD,kBAAoBmC,KAGzCtL,EAAA,UACEA,EAAA,QAAME,MAAM,cAAY,SAE1BF,EAAA,uBACAA,EAAA,MAAIE,MAAM,kBAAgB,kBAC1BF,EAAA,MAAIE,MAAM,kBAAgB,qBAC1BF,EAAA,aAGFA,EAAA,aACC4E,EAAoB7B,MAAMY,KAAIwE,IAC7B,MAAMoD,EAAsBpD,EAAmBqD,QAC/C,MAAMjB,YAACA,GAAepC,EACtB,MAAMsD,EAA8ClB,EAChDpC,EACAqC,EAA6BkB,MAAK9H,GAAKA,EAAEsB,cAAgBiD,EAAmBjD,eAChF,MAAMyG,IAA2BF,EAAmBA,EAAiBD,QAAU,IAE/E,MAAMvG,EAAakD,EAAmBlD,WAEtC,MAAMpB,EAAasC,KAAKtB,8BAA8BoE,WAAUrF,GAAKA,IAAMuE,EAAmBjD,gBAAiB,EAC/G,IAAI0G,EAAsBzD,EAAmBzG,KAE7C,IAAKkK,GAAuBA,EAAoBC,OAAOlF,QAAU,EAAGiF,EAAsB,WAE1F,OACE5L,EAAA,UACEA,EAAA,UACEA,EAAA,SACE8L,SAAU7G,EACVrD,KAAK,WACLJ,MAAO2G,EAAmBjD,aAC1ByF,QAAS9G,EACTL,SAAU7C,GAAKwF,KAAKsE,gCAAgC9J,EAAGwH,MAG3DnI,EAAA,UACEA,EAAA,OAAKE,MAAM,mDACTF,EAAA,KAAG+L,QAASpL,GAAKwF,KAAK+B,0BAA0BvH,EAAGwH,GAAqB6D,KAAK,IAAI9L,MAAM,sCACrFF,EAAA,YAAO4L,MAKb5L,EAAA,UACEA,EAAA,OAAKE,MAAM,mDACXF,EAAA,KAAG+L,QAASpL,GAAKwF,KAAKkC,yBAAyB1H,EAAGwH,GAAqB6D,KAAK,IAAI9L,MAAM,sCAAoC,eAM5HF,EAAA,MAAIE,MAAM,kBAAkBqL,GAC5BvL,EAAA,MAAIE,MAAM,kBAAkByL,GAC5B3L,EAAA,MAAIE,MAAM,WACP+E,EAAa,GACZjF,EAAA,qBACEiM,UAAW,CACT,CAAEvJ,KAAM,OAAQI,QAASnC,GAAKwF,KAAK+B,0BAA0BvH,EAAGwH,GAAqBlF,KAAMjD,EAACkM,EAAQ,OACpG3B,EACI,CAAE7H,KAAM,YAAaI,QAASnC,GAAKwF,KAAKgG,iBAAiBxL,EAAGwH,GAAqBlF,KAAMjD,EAACO,EAAa,OACrG,CACAmC,KAAM,UACNI,QAASnC,GAAKwF,KAAKiG,eAAezL,EAAGwH,GACrClF,KAAMjD,EAACD,EAAW,OAEtB,CAAE2C,KAAM,SAAUI,QAASnC,GAAKwF,KAAKkG,cAAc1L,EAAGwH,GAAqBlF,KAAMjD,EAACsM,EAAU,WAIjG,MAKXtM,EAAA,cAAYyI,KAAMtC,KAAKqC,YAAaE,SAAUvC,KAAKwC,gBAAiBW,WAAYA,EAAYf,YAAapC,KAAKoC,gB,GAhVxGvC,EAAAuD,kBAAoB,GACpBvD,EAAAuG,cAAgB,EAChBvG,EAAAwG,cAAgB,IAChBxG,EAAAyG,WAAa,S"}